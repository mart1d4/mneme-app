# WARNING:
# Whatever you do, do not delete this file. It is here for new developers to use. And do not list it in ".gitignore".
# When you adjust the values, use "Save As" to save as ".env"
# The file ".env" needs to be in ".gitignore".
# This will keep your credentials private to you when you make pull requests.

# This document is just a sample to show what environment variables need to be added
# After setting the environment variables for your local environment,
# rename this file ".env"

# Your MongoDB URI should look something like this:
# mongodb://username:password@host:port/database
# Or if you didn't set a password, like this:
# mongodb://host:port/database
# For example:
# mongodb://user1:CoolPassword@localhost:27017/books

# If you are using MongoDB Atlas, you can find your URI by going to your cluster and clicking "Connect"
# Then click "Drivers" and select "Node.js" as your driver and version
# Then copy the URI and replace the <password> with your password

# If you are using a local MongoDB server, it will likely be set to
# "mongodb://127.0.0.1:27017/$database", 
# where `$database` is whatever you are naming your database for Mneme to use.
# Usually, it will not work to use "mongodb://localhost:27017/$database"

DATABASE_URL="your_mongodb_uri_here"


# This is for the web socket server, which is run with a separate app
# you can find at https://github.com/mneme-app/websocket
# If you don't have it running yet, Mneme should still work, but it won't have live updates

WS_URL="ws:localhost:8080

# Below are token secrets. They help maintain the security of access tokens and refresh tokens.
# They can technically be anything, but best practice is to generate two random 64-byte hexidecimal numbers with a command such as crypto.
# You can use the below command to generate a random hexidecimal after you install Node (which you need anyway):

# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"


ACCESS_TOKEN_SECRET=your_access_token_secret_here
REFRESH_TOKEN_SECRET=your_refresh_token_secret_here


# Keep NEXT_PUBLIC_BASEPATH commented out by default.
# This is used in the event you need your app to be a directory off of a different domain
# rather than giving the app its own domain, which is usually what you will do.
# For example, say you have a website called https://www.example.com, and you want Mneme to be served through requests to https://www.example.com/mneme,
# the NEXT_PUBLIC_BASEPATH would be set to "mneme".
# But you could set it to anything you wish.

# NEXT_PUBLIC_BASEPATH="mneme"


# Notes regarding above:

# MongoDB database
# If you contact the current owners of this repo, we can probably give you the Atlas credentials. In a perfect world, we would set up a Dockerized MongoDB instance

# Websocket
# The websocket has not been fully incorporated nor developed. Because it is not the main function of the app, it is a lower priority. But it will be very handy once it is incorporated. Don't worry about the error message you get for the websocket connection unless you are actually running the websocket server.

# Token Secrets
# Seriously, you need this and you want these to be unique. Run the offered command, and paste in the number generated.
